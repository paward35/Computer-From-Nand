// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[6..8], a=first, b=second, c=third, d=fourth, e=fifth, f=sixth, g=seventh, h=eight);
    RAM64(in=in, load=first, address=address[0..5], out=firstOut);
    RAM64(in=in, load=second, address=address[0..5], out=secondOut);
    RAM64(in=in, load=third, address=address[0..5], out=thirdOut);
    RAM64(in=in, load=fourth, address=address[0..5], out=fourthOut);
    RAM64(in=in, load=fifth, address=address[0..5], out=fifthOut);
    RAM64(in=in, load=sixth, address=address[0..5], out=sixthOut);
    RAM64(in=in, load=seventh, address=address[0..5], out=seventhOut);
    RAM64(in=in, load=eight, address=address[0..5], out=EigthOut);
    Mux8Way16(a=firstOut, b=secondOut, c=thirdOut, d=fourthOut, e=fifthOut, f=sixthOut, g=seventhOut, h=EigthOut, sel=address[6..8], out=out);
    // Put your code here:
}