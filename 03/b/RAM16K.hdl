// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in=load, sel=address[12..13], a=first, b=second, c=third, d=fourth);
    RAM4K(in=in, load=first, address=address[0..11], out=firstOut);
    RAM4K(in=in, load=second, address=address[0..11], out=secondOut);
    RAM4K(in=in, load=third, address=address[0..11], out=thirdOut);
    RAM4K(in=in, load=fourth, address=address[0..11], out=fourthOut);
    Mux4Way16(a=firstOut, b=secondOut, c=thirdOut, d=fourthOut, sel=address[12..13], out=out);
    

    /* RAM4k(in=in, load=second, address=address[0..11], out=secondOut);
    RAM4k(in=in, load=third, address=address[0..11], out=thirdOut);
    RAM4k(in=in, load=fourth, address=address[0..11], out=fourthOut);
    Mux4Way16(a=firstOut, b=secondOut, c=thirdOut, d=fourthOut, sel=address[12..13], out=out); */
}