// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/09/Fraction/Main.jack

// Computes the sum of 2/3 and 1/5.
class Main {
    function void main() {
        var SIR model;
        var int t;

        do Output.printString("####### A COVID-19 motivated SIR epidemic model #######");
        do Output.println();
        do Sys.wait(1500);
        do Output.printString("We start with 100 individuals, one of which is infected.");
        do Output.println();
        do Sys.wait(1500);
        do Output.printString("The transmission and recovery rates are 3 and 1.");
        do Output.println();
        do Sys.wait(1500);
        do Output.printString("The curves show the number of susceptible, infected and recovered people");
        do Output.println();
        do Sys.wait(1500);
        do Output.printString("We run 10 update steps afer which everybody is again healthy.");
        do Output.println();
        do Sys.wait(1500);
        do Output.printString("Stay safe dear user! :) ");
        do Output.println();
        do Sys.wait(1500);

        do Screen.clearScreen();




        // Create the coordinate system
        do Screen.drawLine(10,245,10,10);
        do Screen.drawLine(10,245,502,245);
        // Create the arrow tips
        do Screen.drawLine(503,245,495,242);
        do Screen.drawLine(503,245,495,248);
        do Screen.drawLine(10,9,7,17);
        do Screen.drawLine(10,9,13,17);
      
        // initialize the model and run it for 10 time steps
        let model = SIR.new(3, 1, 99, 1, 0);
        let t = 0;
        while (t < 10) {
            let model = model.timestep(t);
            let t = t + 1;
            do Sys.wait(500);
        }
        return;
    }
}
