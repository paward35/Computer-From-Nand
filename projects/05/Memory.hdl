// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl
/** 
 * The Memory chip implements the complete address space of the Hack data memory,
 * including RAM, memory mapped screen, and memory mapped keyboard.
 * Outputs the value of the memory location specified by the address input.
 * If (load == 1), sets the memory location specified by the address input
 * to the value of the in input.
 * Address space rules:
 * Only the upper 16K + 8K + 1 words of the memory are used.
 * Access to address 0 to 16383 (0x0000 to 0x3FFF) results in accessing the RAM;
 * Access to address 16384 to 24575 (0x4000 to 0x5FFF) results in accessing the Screen memory map;
 * Access to address 24576 (0x6000) results in accessing the Keyboard memory map.
 * 
 * 000000000000000: 0
 * 011111111111111: 16383
 * 100000000000000: 16384
 * 101000000000000: 20480
 * 110000000000000: 24576
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    DMux4Way(in=true, sel=address[13..14], a=ramH1, b=ramH2, c=screenSelected, d=LoadKBD);
    Or(a=ramH1, b=ramH2, out=ramSelected);
    
    And(a=load, b=ramSelected, out=loadRam);
    And(a=load, b=screenSelected, out=loadScreen);

    RAM16K(in=in, load=loadRam, address=address[0..13], out=outRAM16);
    Screen(in=in, load=loadScreen, address=address[0..12], out=screenOut); 
    Keyboard(out=kbdOut);

    Mux4Way16(a=outRAM16, b=outRAM16, c=screenOut, d=kbdOut, sel=address[13..14], out=out);
}
