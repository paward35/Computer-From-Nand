// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Not(in=sel[0],out=Notsel0);
    Not(in=sel[1],out=Notsel1);
    Not(in=sel[2],out=Notsel2);
    And3(a=Notsel2,b=Notsel1,c=Notsel0,out=isA);
    And3(a=Notsel2,b=Notsel1,c=sel[0],out=isB);
    And3(a=Notsel2,b=sel[1],c=Notsel0,out=isC);
    And3(a=Notsel2,b=sel[1],c=sel[0],out=isD);
    And3(a=sel[2],b=Notsel1,c=Notsel0,out=isE);
    And3(a=sel[2],b=Notsel1,c=sel[0],out=isF);
    And3(a=sel[2],b=sel[1],c=Notsel0,out=isG);
    And3(a=sel[2],b=sel[1],c=sel[0],out=isH);
    And1To16(a=a, b=isA, out=outA);
    And1To16(a=b, b=isB, out=outB);
    And1To16(a=c, b=isC, out=outC);
    And1To16(a=d, b=isD, out=outD);
    And1To16(a=e, b=isE, out=outE);
    And1To16(a=f, b=isF, out=outF);
    And1To16(a=g, b=isG, out=outG);
    And1To16(a=h, b=isH, out=outH);
    Or16(a=outA, b=outB, out=outAorOutB);
    Or16(a=outC, b=outD, out=outCorOutD);
    Or16(a=outCorOutD, b=outAorOutB, out=second);
    Or16(a=outE, b=outF, out=outEorOutF);
    Or16(a=outG, b=outH, out=outGorOutH);
    Or16(a=outEorOutF, b=outGorOutH, out=third);
    Or16(a=second, b=third, out=out);
}